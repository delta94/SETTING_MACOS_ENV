{
  //-----------------SNIPPETS FOR EXPRESS------------
  "app.listen": {
    "prefix": "app.listen",
    "body": [
      "const { PORT = 5000 } = process.env;",
      "app.listen(PORT, () => console.log(`Server started on port ${PORT}`));"
    ]
  },
  "app.get": {
    "prefix": "app.get",
    "body": ["app.get('/', (req, res) => {", "", "});"]
  },
  //-----------------SNIPPETS FOR REDUX------------
  "Redux saga": {
    "prefix": "rxsaga",
    "body": [
      "import { takeEvery, put, take } from 'redux-saga/effects';",
      "import {",
      " action",
      "} from './actions';",
      "",
      "function* saga() {",
      " try {",
      "   yield put(action);",
      " } catch (e) {",
      "   yield put(getAllContactFailureAction());",
      " }",
      "}",
      "",
      "export default [",
      " takeEvery(YourTypes.YOUR_TYPES, saga),",
      "];"
    ]
  },
  "Redux action": {
    "prefix": "rxaction",
    "body": [
      "import { makeConstantCreator, makeActionCreator } from '../../utils/reduxUtils';",
      "",
      "export const YourTypes = makeConstantCreator(",
      " 'YOUR_TYPE',",
      ");",
      "",
      "export const action = params => makeActionCreator(YourTypes.YOUR_TYPE, {params});"
    ]
  },
  "Redux reducer": {
    "prefix": "rxreducer",
    "body": [
      "import { yourTypes } from './actions';",
      "import { makeReducerCreator } from '../../utils/reduxUtils';",
      "",
      "export const initialState = {",
      "",
      "};",
      "",
      "export const action = (state, { data }) => ({",
      "",
      "});",
      "",
      "export default makeReducerCreator(initialState, {",
      " [yourTypes.YOURTYPES]: action,",
      "});"
    ]
  },
  "Redux react container": {
    "prefix": "rxcontainer",
    "body": [
      "import React, { useEffect } from 'react';",
      "import { connect } from 'react-redux';",
      "import PropTypes from 'prop-types';",
      "",
      "const index = ({}) => {",
      " useEffect(() => {",
      " }, []);",
      " return (",
      " //",
      " );",
      "};",
      "",
      "index.propTypes = {",
      " //",
      "};",
      "",
      "const mapStateToProps = state => ({",
      "  props: state.props",
      "});",
      "",
      "const mapDispatchToProps = dispatch => ({",
      "  action: (params) => dispatch(action(params))",
      "});",
      "",
      "export default connect(",
      " mapStateToProps,",
      " mapDispatchToProps,",
      ")(index);"
    ]
  },
  //-----------------SNIPPETS FOR REACT------------
  "import styled from 'styled-component' ": {
    "prefix": "ims",
    "body": [
      "import styled from 'styled-components'; ",
      "",
      "export default styled.div`",
      " //code hear",
      "`;"
    ]
  },
  "Proptypes": {
    "prefix": "prop",
    "body": ["propTypes = {", "", "};"]
  },
  //-----------------SNIPPETS FOR ANT DESIGN--------
  "<Button type='' onClick={}></Button>": {
    "prefix": "ant-btn",
    "body": ["<Button type='primary' onClick={}></Button>"]
  },
  //-----------------SNIPPETS FOR JAVASCRIPT-------------
  "console.log ": {
    "prefix": "log",
    "body": ["console.log()"]
  },
  "document.getElementById()": {
    "prefix": "getid",
    "body": ["document.getElementById("]
  },
  //-----------------SNIPPETS FOR SCSS/CSS-------------
  "CSS RESET": {
    "prefix": "cssreset",
    "body": [
      "//--------------------CSS RESET--------------------------",
      "html {",
      "  box-sizing: border-box;",
      "}",
      "",
      "*,",
      "*::before,",
      "*::after {",
      "  box-sizing: inherit;",
      "}",
      "",
      "body,",
      "h1,",
      "h2,",
      "h3,",
      "h4,",
      "h5,",
      "h6,",
      "ul,",
      "ol,",
      "li,",
      "p,",
      "pre,",
      "blockquote,",
      "figure,",
      "hr {",
      "  margin: 0;",
      "  padding: 0;",
      "}",
      "",
      "ul {",
      "  list-style: none;",
      "}",
      "",
      "embed,",
      "iframe,",
      "img,",
      "object,",
      "video {",
      "  display: block;",
      "  max-width: 100%;",
      "}",
      "",
      "table {",
      "  table-layout: fixed;",
      "  width: 100%;",
      "}",
      "",
      "[hidden] {",
      "  display: none !important;",
      "}"
    ]
  },
  "flex-center": {
    "prefix": "flex-center",
    "body": [
      "display: flex;",
      "align-items: center;",
      "justify-content: center;"
    ]
  },
  "font-face": {
    "prefix": "font-face",
    "body": [
      "@font-face {",
      "  font-family: 'Poppins-Regular';",
      "  src: url('../assets/fonts/');",
      "}"
    ]
  },
  "@media": {
    "prefix": "media",
    "body": [
      "@media all and (max-width: 992px) and (min-width: 768px) {",
      "  //",
      "}",
      "@media all and (max-width: 768px) {",
      "  //",
      "}"
    ]
  }
}
